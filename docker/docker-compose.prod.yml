version: '3.8'

services:
  update-api:
    build: 
      context: ..
      dockerfile: docker/Dockerfile
      args:
        NODE_ENV: production
    image: update-server/api:latest
    container_name: update-api
    restart: unless-stopped
    ports:
      - "127.0.0.1:3000:3000"  # 仅本地访问，通过Nginx代理
    volumes:
      - ../server/config.json:/app/server/config.json:ro
      - ../server/projects:/app/server/projects
    environment:
      - NODE_ENV=production
      - LOG_LEVEL=info
    command: node server/index.js
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - backend
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
  
  update-ui:
    build:
      context: ..
      dockerfile: docker/Dockerfile
      args:
        NODE_ENV: production
    image: update-server/ui:latest
    container_name: update-ui
    restart: unless-stopped
    ports:
      - "127.0.0.1:8080:8080"  # 仅本地访问，通过Nginx代理
    volumes:
      - ../server/config.json:/app/server/config.json:ro
      - ../server/projects:/app/server/projects
      - ../server.log:/app/server.log
    environment:
      - NODE_ENV=production
      - LOG_LEVEL=info
    command: node server/server-ui.js
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - backend
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
  
  nginx:
    image: nginx:alpine
    container_name: update-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ../logs/nginx:/var/log/nginx
    depends_on:
      - update-api
      - update-ui
    networks:
      - backend
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  backend:
    driver: bridge

volumes:
  nginx_logs:
    driver: local 